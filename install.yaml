---
- name: Install grafana with influxdb integration
  hosts: influx-grafana
   
  tasks:
    - name: start docker
      become: yes
      service:
        name=docker
        state=started
        enabled=yes
    - name: Add remote user to docker group
      become: yes
      user:
        name: "{{ ansible_user_id }}"
        groups: 
          - "docker"
        append: yes

    # install influx
    - name: Create a influx data volume
      community.docker.docker_volume:
        name: influx-data
    - name: Create a influx config volume
      community.docker.docker_volume:
        name: influx-config
    - name: Create a influx container container
      community.docker.docker_container:
        name: influxdb2
        image: influxdb:latest
        volumes:
          - influx-data:/var/lib/influxdb2
          - influx-config:/etc/influxdb2
        env:
          DOCKER_INFLUXDB_INIT_MODE: "setup"
          DOCKER_INFLUXDB_INIT_USERNAME: "{{ influx_user }}"
          DOCKER_INFLUXDB_INIT_PASSWORD: "{{ influx_pass }}"
          DOCKER_INFLUXDB_INIT_ORG: "{{ influx_org }}"
          DOCKER_INFLUXDB_INIT_BUCKET: "{{ influx_bucket }}"
        published_ports:
          - 8086:8086
    - name: Wait for influxdb to be available
      shell: docker exec influxdb2 influx auth list --json
      register: result
      until: result.stderr.find("Error") == -1
      retries: 10
      delay: 3
    - name: Fetch influxdb user token
      shell: docker exec influxdb2 influx auth list --json | jq -r '.[0].token'
      register: influxdb_token
    - name: Print influx token to console
      ansible.builtin.debug:
        msg: Influxdb user token {{ influxdb_token.stdout }}

    # install grafana
    - name: Create a grafana data volume
      community.docker.docker_volume:
        name: grafana-storage
    - name: Create a grafana container container
      community.docker.docker_container:
        name: grafana
        image: grafana/grafana
        volumes:
          - grafana-storage:/var/lib/grafana
        published_ports:
          - 3000:3000
    - name: Set grafana admin password
      shell: docker exec -it grafana grafana-cli --homepath "/usr/share/grafana" admin reset-admin-password {{ grafana_pass }}

    # add influx as data source in grafana
    - name: Create python virtual environment and install dependencies 
      pip:
        name: requests
        virtualenv: /tmp/grafana-influx-integrator
        virtualenv_command: /usr/bin/python3 -m venv
    - name: execute grafana influx integration script
      script: add_influx_to_grafana.py {{grafana_user}} {{grafana_pass}} {{ansible_hostname}} {{influxdb_token.stdout}} {{ansible_hostname}} {{influx_bucket}} {{influx_org}}
      args:
        executable: /tmp/grafana-influx-integrator/bin/python3